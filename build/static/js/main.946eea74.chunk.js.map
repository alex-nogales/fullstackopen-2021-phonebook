{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/DelButton.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","searchName","setSearchName","value","onChange","event","target","PersonForm","addPerson","newName","setNewName","newNumber","setNewNumber","onSubmit","type","DelButton","name","onClick","setNotification","window","confirm","personsService","catch","error","setTimeout","confirmation","Persons","persons","filter","person","toLowerCase","includes","map","number","Notification","notification","className","message","App","useState","setPersons","useEffect","initialPersons","notifyWith","preventDefault","nameExists","find","persona","changedPerson","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.946eea74.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios\n            .get(baseUrl)\n            .then(response => response.data)\n}\n\nconst create = newObject => {\n    return axios\n            .post(baseUrl, newObject)\n            .then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    return axios\n            .put(`${baseUrl}/${id}`, newObject)\n            .then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios\n            .delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst Filter = ({searchName, setSearchName}) => {\n    return (\n        <input value={searchName} onChange={event => setSearchName(event.target.value)} />\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addPerson, newName, setNewName, newNumber, setNewNumber}) => {\n    return ( \n        <form onSubmit={addPerson}>\n            <div>\n                name: <input value={newName} onChange={event => setNewName(event.target.value)} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={event => setNewNumber(event.target.value)} />\n            </div>\n            <div>\n                <button type='submit'>Add new</button>\n            </div>\n        </form>\n    )\n\n}\n\nexport default PersonForm","import React from 'react'\n\nimport personsService from '../services/persons'\n\nconst confirmation = (id, name, setNotification) => {\n    if (window.confirm(`do you really want to remove ${name}?`)) {\n        personsService.remove(id)\n            .catch(error => {\n                setNotification(`information of ${name} has already been removed from the server`, 'error')\n                setTimeout(() => setNotification(null), 5000)\n            })\n    }\n}\n\nconst DelButton = ( {id, name} ) => {\n    return (\n        <button onClick={() => confirmation(id, name)}>del</button>\n    )\n}\n\nexport default DelButton","import React from 'react'\n\nimport DelButton from './DelButton'\n\nconst Persons = ({persons, searchName, setNotification}) => {\n    return (\n        persons.filter(person => person.name.toLowerCase().includes(searchName.toLowerCase()))\n        .map(person =>\n            <div key={person.name}> \n            <li>\n                {person.name} {person.number} \n                <DelButton name={person.name} id={person.id} setNotification={setNotification} />\n            </li>\n            </div>\n        )\n\n    )\n}\n\nexport default Persons","import React from 'react'\nimport '../index.css'\n\nconst Notification = ({ notification }) => {\n    if (notification === null) {\n        return null\n    }\n    return (\n        <div className={notification.type}>\n            {notification.message}\n        </div>\n    )\n}\n\n\nexport default Notification","import React, { useEffect, useState } from 'react'\n\nimport personsService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  })\n  const notifyWith = (message, type='success') => {\n    setNotification({message, type})\n    setTimeout(() => setNotification(null), 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameExists = persons.find(person => person.name === newName)\n\n    if (nameExists) {\n      if (window.confirm(`${newName} is already added to phonebook, want update it with new number?`)) {\n        const persona = persons.find(person => person.id === nameExists.id)\n        const changedPerson = {...persona, number: newNumber}\n        \n        personsService\n          .update(nameExists.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== nameExists.id ? person : returnedPerson))\n            notifyWith(`Modified ${newName}`)\n          })\n      }\n\n    } else {\n      const personObject = { \n        name: newName,\n        number: newNumber\n      }\n      personsService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          notifyWith(`Added ${newName}`)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter searchName={searchName} setSearchName={setSearchName} />\n\n      <h2>Add a new contact</h2>\n      <PersonForm addPerson={addPerson} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} \n                  setNotification={setNotification} />\n      \n      <h2>Numbers</h2>\n      <Persons persons={persons} searchName={searchName} />\n\n    </div>\n  )\n}\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}